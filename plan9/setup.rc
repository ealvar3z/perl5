#!/bin/rc
# This is an rc shell script puts files where they belong and does a bit of
# patching in order not to modify some perl core code which might impact other
# OSes. To use, just run it from within the plan9 subdirectory with the
# appropriate permissions.
# First modified 6/30/96 by:
# Luther Huffman, Strategic Computer Solutions, Inc., lutherh@stratcom.com
# Modified May 2020 by:
# David Romano, unobe@cpan.org
# Last Modified December 2024 by:
# e. alvarez, ~eax/public-inbox@lists.sr.ht

# these default paths can be overridden by environment variables
if (! ~ $privroot '') privroot=/sys/lib/perl 
if (! ~ $builddir '') builddir=`{cd .. ; pwd}

required_files = (plan9.c plan9ish.h mkfile ../patchlevel.h 9front.patch)
for(file in $required_files){
    if (! test -e $file) {
        echo 'Error: Required file not found: $file' >[1=2]
        exit
    }
}

awk -f versnum ../patchlevel.h
if (! test -e buildinfo) {
    echo 'Error: buildinfo file is missing.' >[1=2]
    exit
}
. buildinfo

# 'typestr' is used by /sys/src/cmd/cc/lex.c, but not sure when/if it is ever used.
# Patch sv.c from afar, which uses 'typestr' as a variable name, and uses bit-fields.
# Also patch some other things:
echo 'Applying patch...'
status=`{cd $builddir; ape/patch -p1 <plan9/9front.patch}
if (! ~ $status 0) {
    echo 'Error: Patching failed.' >[1=2]
    exit
}

if (~ $#* 0) platforms = $objtype
if not switch($1) {
    case -a ; platforms = (386 68000 68020 arm arm amd64 mips power power64 sparc sparc64 spim)
    case * ; echo 'Usage: setup.rc [-a]' >[1=2] ; exit
}

echo 'Updating build files...'
cp plan9.c plan9ish.h mkfile $builddir
if (! ~ $? 0) {
    echo 'Error: Failed to copy files to build directory.' >[1=2]
    exit
}

echo 'Creating library directories...'
privlib=$privroot/$p9pvers
sitelib=$privlib/site_perl

for(dir in $privroot $privlib $privlib/auto $sitelib){
    if (! test -d $dir) {
        mkdir $dir
        if (! ~ $? 0) {
            echo 'Error: Failed to create directory: $dir' >[1=2]
            exit
        }
    }
}

for(i in $platforms){
    echo "Creating directories for platform: $i..."
    archroot=/$i/lib/perl
    archlib=$archroot/$p9pvers
    sitearch=$archlib/site_perl
    corelib=$archlib/CORE
    arpalib=$corelib/arpa

    for(dir in $archroot $archlib $sitearch $corelib $arpalib){
        if (! test -d $dir) {
            mkdir $dir
            if (! ~ $? 0) {
                echo 'Error: Failed to create directory: $dir' >[1=2]
                exit
            }
        }
    }

    cp $builddir/*.h *.h $corelib
    if (! ~ $? 0) {
        echo 'Error: Failed to copy header files to $corelib' >[1=2]
        exit
    }
    cp arpa/*.h $arpalib
    if (! ~ $? 0) {
        echo 'Error: Failed to copy arpa headers to $arpalib' >[1=2]
        exit
    }
}

echo 'Populating private libraries...'
{cd $builddir/lib ; tar c . } | {cd $privlib ; tar x }
if (! ~ $? 0) {
    echo 'Error: Failed to populate private libraries.' >[1=2]
    exit
}

echo 'Setup completed successfully.'

